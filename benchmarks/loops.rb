require 'benchmark'

n = 5_000_000

Benchmark.bmbm do |x|
  x.report('A') { for i in 1..n; a = '1'; end }
  x.report('B') { n.times do   ; a = '1'; end }
  x.report('C') { 1.upto(n) do ; a = '1'; end }
  x.report('D') { (1..n).each do ; a = '1'; end }
end

__END__

Rehearsal -------------------------------------
A   0.217408   0.000711   0.218119 (  0.218197)
B   0.216138   0.000128   0.216266 (  0.216263)
C   0.219155   0.000409   0.219564 (  0.219600)
D   0.222079   0.001943   0.224022 (  0.224369)
---------------------------- total: 0.877971sec

        user     system      total        real
A   0.216410   0.000107   0.216517 (  0.216535)
B   0.217529   0.000797   0.218326 (  0.218419)
C   0.218804   0.000364   0.219168 (  0.219165)
D   0.221590   0.002451   0.224041 (  0.224654)

Rehearsal -------------------------------------
A   0.216958   0.000364   0.217322 (  0.217338)
B   0.218372   0.001071   0.219443 (  0.219607)
C   0.222265   0.002541   0.224806 (  0.225098)
D   0.219179   0.000137   0.219316 (  0.219341)
---------------------------- total: 0.880887sec

        user     system      total        real
A   0.216380   0.000858   0.217238 (  0.217257)
B   0.220066   0.001335   0.221401 (  0.221941)
C   0.217332   0.000535   0.217867 (  0.217875)
D   0.217293   0.000098   0.217391 (  0.217409)
